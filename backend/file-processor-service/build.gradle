plugins {
		id 'java'
		id 'org.springframework.boot' version '3.3.3'
		id 'io.spring.dependency-management' version '1.1.6'
		id "com.diffplug.spotless" version "6.25.0"
	}

	group = 'com.jfp'
	version = '0.0.1-SNAPSHOT'

	ext {
		javaVersion = JavaVersion.VERSION_21
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}

	tasks.named("bootJar") {
		enabled = true
		mainClass = 'com.jfp.files.processor.FileProcessorApplication'
		archiveFileName = 'file-processor-0.0.1-SNAPSHOT.jar'
	}

	jar {
		archiveBaseName = 'files.processor'
		version = '0.0.1-SNAPSHOT'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-aop'
		implementation 'net.logstash.logback:logstash-logback-encoder:8.0'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
		implementation 'org.apache.pdfbox:pdfbox:2.0.30'

		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		annotationProcessor 'org.projectlombok:lombok'

		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		testImplementation 'org.springframework.boot:spring-boot-testcontainers'
		testImplementation 'org.testcontainers:junit-jupiter'
		testImplementation 'org.springframework.amqp:spring-rabbit-test'
	}

	test {
		useJUnitPlatform()
	}

	tasks.withType(JavaCompile).configureEach {
		options.encoding = 'UTF-8'
	}

	spotless {
		java {
			googleJavaFormat("1.19.2")
			target "**/src/main/java/**/*.java", "**/src/test/java/**/*.java"
		}
	}